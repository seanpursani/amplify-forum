type Topic
  @model
  @auth(
    rules: [
      { allow: owner }
      {
        allow: groups
        groups: ["Moderator"]
        operations: [read, update, delete]
      }
      { allow: private, operations: [read] }
    ]
  ) {
  id: ID!
  title: String!
  comments: [Comment] @hasMany
}

type Comment 
  @model
  @auth(
    rules: [
      { allow: owner }
      {
        allow: groups
        groups: ["Moderator"]
        operations: [read, update, delete]
      }
      { allow: private, operations: [read] }
    ]
  ) {
  id: ID!
  topicId: ID! @index(name: "topicComments", sortKeyFields: ["content"])
  content: String!
  topic: [Topic] @hasMany
}

type Subscription {
  onCreateCommentByTopicId(topicId: String!): Comment
    @aws_subscribe(mutations: ["createComment"])
  onDeleteCommentByTopicId(topicId: String!): Comment
    @aws_subscribe(mutations: ["deleteComment"])
}